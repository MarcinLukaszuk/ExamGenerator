@model ExamGeneratorModel.ViewModel.StudentGroupViewModel

@{
    ViewBag.Title = "Edit";
}

<h1>Edit</h1>
<div>
    <h2>StudentGroup:  <b>@Html.DisplayFor(model => model.StudentGroup.Name)</b></h2>
</div>

@using (Html.BeginForm())
{
    <input type="hidden" name="studentGroupID" value="@Model.StudentGroup.Id" />
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => Model.StudentGroup.Id)

        <div class="form-group">
            @Html.LabelFor(model => Model.StudentGroup.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => Model.StudentGroup.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => Model.StudentGroup.Name, "", new { @class = "text-danger" })

            </div>

            <div class="col-md-5">
                <input type="submit" value="Save Group" class="btn btn-success" />
            </div>
        </div>
    </div>

    <table class="table">
        @if (Model.students.Any())
        {
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.students.First().Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.students.First().SurName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.students.First().Email)
                </th>
                <th></th>
            </tr>
        }

        @foreach (var student in Model.students)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => student.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => student.SurName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => student.Email)
                </td>
                <td>
                    <input type="submit" value="Disassociate" formaction=@Url.Action("DisassociateStudentsToGroup", "StudentGroups", new { studentID = student.Id, studentGroupID = Model.StudentGroup.Id }) class="btn btn-danger" />

                </td>
            </tr>

        }

    </table>
}
 
@using (Html.BeginForm("AddStudentsToGroup", "StudentGroups", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    
    <label class="btn btn-default btn-file">
       Browse file <input type="file" name="FileUpload" style="display: none;" />
    </label>
 
    <input type="submit" formaction=@Url.Action("AddStudentsToGroup", "StudentGroups", new { studentGroupID = Model.StudentGroup.Id })  class="btn btn-default" value="Upload" />
}



<div>
    @Html.ActionLink("Back to List", "Index")
</div>
